{"version":3,"sources":["components/button.js","sections/hero/hero.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","linkTo","itemLabel","C","href","className","navigation","name","Hero","TxtType","el","toRotate","period","this","loopNum","parseInt","txt","tick","isDeleting","prototype","i","length","fullTxt","substring","innerHTML","that","delta","Math","random","setTimeout","window","onload","elements","document","getElementsByClassName","getAttribute","JSON","parse","css","createElement","type","body","appendChild","fill","viewBox","preserveAspectRatio","points","src","map","item","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","focus","alt","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfc738ca.chunk.js","sourcesContent":["import React from \"react\";\n\n\nlet Button = (props) => {\n    let { linkTo, itemLabel } = props;\n\n    let C = 'button';\n    if (linkTo) {\n        C = 'a'\n    }\n\n    return (\n        <C\n            href={linkTo}\n            className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10\"\n        >\n            {itemLabel}\n        </C>\n    )\n\n}\n\nexport default Button;","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Popover, Transition } from '@headlessui/react'\nimport { MenuIcon, XIcon } from '@heroicons/react/outline'\nimport Button from '../../components/button.js'\n\nconst navigation = [\n    { name: 'About', href: '#' },\n    { name: 'Resume', href: '#' },\n    { name: 'Research', href: '#' },\n    { name: 'Portfolio', href: '#' },\n    { name: 'Contact', href: '#' }\n]\nlet Hero = () => {\n    //Typewriter effect\n\n\n\n    var TxtType = function (el, toRotate, period) {\n        this.toRotate = toRotate;\n        this.el = el;\n        this.loopNum = 0;\n        this.period = parseInt(period, 10) || 2000;\n        this.txt = '';\n        this.tick();\n        this.isDeleting = false;\n    };\n\n    TxtType.prototype.tick = function () {\n        var i = this.loopNum % this.toRotate.length;\n        var fullTxt = this.toRotate[i];\n\n        if (this.isDeleting) {\n            this.txt = fullTxt.substring(0, this.txt.length - 1);\n        } else {\n            this.txt = fullTxt.substring(0, this.txt.length + 1);\n        }\n\n        this.el.innerHTML = '<span class=\"wrap\">' + this.txt + '</span>';\n\n        var that = this;\n        var delta = 200 - Math.random() * 100;\n\n        if (this.isDeleting) { delta /= 2; }\n\n        if (!this.isDeleting && this.txt === fullTxt) {\n            delta = this.period;\n            this.isDeleting = true;\n        } else if (this.isDeleting && this.txt === '') {\n            this.isDeleting = false;\n            this.loopNum++;\n            delta = 500;\n        }\n\n        setTimeout(function () {\n            that.tick();\n        }, delta);\n    };\n\n    window.onload = function () {\n        var elements = document.getElementsByClassName('typewrite');\n        for (var i = 0; i < elements.length; i++) {\n            var toRotate = elements[i].getAttribute('data-type');\n            var period = elements[i].getAttribute('data-period');\n            if (toRotate) {\n                new TxtType(elements[i], JSON.parse(toRotate), period);\n            }\n        }\n        // INJECT CSS\n        var css = document.createElement(\"style\");\n        css.type = \"text/css\";\n        css.innerHTML = \".typewrite > .wrap { border-right: 0.08em solid #fff}\";\n        document.body.appendChild(css);\n    };\n\n\n    return (\n        <div className=\"relative bg-white overflow-hidden\">\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32\">\n                    <svg\n                        className=\"hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 100 100\"\n                        preserveAspectRatio=\"none\"\n                        aria-hidden=\"true\"\n                    >\n                        <polygon points=\"50,0 100,0 50,100 0,100\" />\n                    </svg>\n\n                    <Popover>\n                        <div className=\"relative pt-6 px-4 sm:px-6 lg:px-8\">\n                            <nav className=\"relative flex items-center justify-between sm:h-10 lg:justify-start\" aria-label=\"Global\">\n                                <div className=\"flex items-center flex-grow flex-shrink-0 lg:flex-grow-0\">\n                                    <div className=\"flex items-center justify-between w-full md:w-auto\">\n                                        <a href=\"#\">\n                                            <span className=\"sr-only\">Workflow</span>\n                                            <img\n                                                className=\"h-8 w-auto sm:h-10\"\n                                                src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                                            />\n                                        </a>\n                                        <div className=\"-mr-2 flex items-center md:hidden\">\n                                            <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                                                <span className=\"sr-only\">Open main menu</span>\n                                                <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                                            </Popover.Button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"hidden md:block md:ml-10 md:pr-4 md:space-x-8\">\n                                    {navigation.map((item) => (\n                                        <a key={item.name} href={item.href} className=\"font-medium text-gray-500 hover:text-gray-900\">\n                                            {item.name}\n                                        </a>\n                                    ))}\n                                    <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                                        Log in\n                                    </a>\n                                </div>\n                            </nav>\n                        </div>\n\n                        <Transition\n                            as={Fragment}\n                            enter=\"duration-150 ease-out\"\n                            enterFrom=\"opacity-0 scale-95\"\n                            enterTo=\"opacity-100 scale-100\"\n                            leave=\"duration-100 ease-in\"\n                            leaveFrom=\"opacity-100 scale-100\"\n                            leaveTo=\"opacity-0 scale-95\"\n                        >\n                            <Popover.Panel\n                                focus\n                                className=\"absolute z-10 top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\"\n                            >\n                                <div className=\"rounded-lg shadow-md bg-white ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                                    <div className=\"px-5 pt-4 flex items-center justify-between\">\n                                        <div>\n                                            <img\n                                                className=\"h-8 w-auto\"\n                                                src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                                                alt=\"\"\n                                            />\n                                        </div>\n                                        <div className=\"-mr-2\">\n                                            <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                                                <span className=\"sr-only\">Close main menu</span>\n                                                <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                                            </Popover.Button>\n                                        </div>\n                                    </div>\n                                    <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                                        {navigation.map((item) => (\n                                            <a\n                                                key={item.name}\n                                                href={item.href}\n                                                className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n                                            >\n                                                {item.name}\n                                            </a>\n                                        ))}\n                                    </div>\n                                </div>\n                            </Popover.Panel>\n                        </Transition>\n                    </Popover>\n\n                    <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n                        <div className=\"sm:text-center lg:text-left\">\n                            <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\n                                <span className=\"block\">Hello, I'm Andrea.</span>\n                            </h1>\n                            <h3 className=\"text-2xl block text-indigo-600\">I am <span class=\"typewrite\" data-period=\"2000\" data-type='[ \"a React Developer.\", \"a Front End Engineer.\", \"always evolving.\", \"many things.\" ]'></span>\n                                <span class=\"wrap\"></span></h3>\n\n\n                            <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n                                Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure qui lorem cupidatat commodo. Elit sunt amet\n                                fugiat veniam occaecat fugiat aliqua.\n                            </p>\n                            <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\n                                <div className=\"rounded-md shadow\">\n                                    <Button href={'#'} itemLabel={'Learn more'} />\n                                </div>\n                                <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                                    <a\n                                        href=\"#\"\n                                        className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\n                                    >\n                                        Get in touch\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </main>\n                </div>\n            </div>\n            <div className=\"lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2\">\n                <img\n                    className=\"h-56 w-full object-cover sm:h-72 md:h-96 lg:w-full lg:h-full\"\n                    src=\"https://images.unsplash.com/photo-1551434678-e076c223a692?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2850&q=80\"\n                    alt=\"\"\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Hero;","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport Hero from './sections/hero/hero.js'\n\n\nlet App = () => {\n  return (\n    <>\n      <Hero />\n    </>\n\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}